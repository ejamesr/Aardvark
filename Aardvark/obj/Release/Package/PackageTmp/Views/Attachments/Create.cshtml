@model Aardvark.Models.TicketAttachment
@using Aardvark.Models;

@{
    ViewBag.Title = "Create";
}

<div id="content">
    <div id="content-header">
        <h1>Attachments</h1>
    </div> <!-- #content-header -->
    <div id="content-container">

        <h2>Create</h2>
        @* To specify that the form comes in multiple parts: *@
        @using (Html.BeginForm("Create", "Attachments", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h3>Ticket Attachment for Ticket # @Model.TicketId</h3>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.TicketId)
        @Html.HiddenFor(model => model.UserId)

        @*<div class="form-group">
                @Html.LabelFor(model => model.FilePath, htmlAttributes: new { @class = "control-label col-sm-2 col-xs-3" })
                <div class="col-md-4 col-sm-8 col-xs-9">
                    @Html.EditorFor(model => model.FilePath, new { htmlAttributes = new { @class = "form-control" } } )
                    @Html.ValidationMessageFor(model => model.FilePath, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <br />
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-sm-2 col-xs-3" })
            <div class="col-md-4 col-sm-8 col-xs-9">
                @Html.TextAreaFor(model => model.Description, 4, 40, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("File Url", htmlAttributes: new { @class = "control-label col-sm-2 col-xs-3" })
            <div class="col-md-4 col-sm-8 col-xs-9">
                @Html.EditorFor(model => model.FileUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FileUrl, "", new { @class = "text-danger" })
            @if (ViewBag.ErrMsg != null)
            {
                <br />
                <div class="field-validation-error text-danger">
                    @ViewBag.ErrMsg
                </div>
            }
            </div>
        </div>

        <div class="form-group">
            @Html.Label("File to Upload", htmlAttributes: new { @class = "control-label col-sm-2 col-xs-3" })
            <div class="col-md-4 col-sm-8 col-xs-9">
                <input type="file" id="fileUpload" name="fileUpload" 
                       class="btn btn-secondary form-control" onchange="GotImage(this)" />
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="col-sm-2 col-xs-3 align-right">
                @Html.ActionLink("Back to List", "Index", new { id = @Model.TicketId })
            </div>
            <div class="col-md-4 col-sm-8 col-xs-9">
                <input type="submit" value="Add Attachment" class="btn btn-primary" />
            </div>
        </div>
        <div id="isImg" class="form-group" hidden>
            <br />
            <div class="col-sm-offset-2 col-sm-4 col-xs-offset-3 col-xs-8">
                <img src="#" id="newImg" alt="Image to upload" />
            </div>
        </div>
        <div id="fileDesc" class="form-group" hidden>
            <br />
            <div class="col-sm-offset-2 col-sm-4 col-xs-offset-3 col-xs-8">
                <h3><em id="fileType"></em></h3>
            </div>
        </div>
    </div>
        }
    </div>
</div>


@section Scripts {
    <script>
        $(document).ready(function () {
            //$('#sidebar-Users').addClass('active');
            //$('#sidebar-Users-Manage').addClass('active');
        });
        //$(document).ready(function () {
        //    $("main-menu").removeClass("active");
        //    $("#menuBlog").addClass("active");
        //});

        function GotImage(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    if (input.files[0].type.substring(0, 6) == "image/")
                    {
                        // Got an image!
                        $('#isImg').removeAttr('hidden');
                        $("#newImg")
                            .attr('src', e.target.result)
                            .height(300);
                    }
                    else {
                        // Other type of file
                        $('#isImg').attr('hidden', 'hidden');
                    }
                    $('#fileDesc').removeAttr('hidden');
                    $('#fileType').text('Type of file: ' + input.files[0].type);
                };
                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>
}


