@model Aardvark.Models.Ticket

@{
    ViewBag.Title = "Edit";
}

<div id="content">
    <div id="content-header">
        <h1>Tickets</h1>
    </div> <!-- #content-header -->
    <div id="content-container">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h3>Edit Ticket # @Model.Id</h3>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                @*@Html.HiddenFor(model => model.OwnerUserId)
                    @Html.HiddenFor(model => model.Created)-10
                    @Html.HiddenFor(model => model.Updated)*@


                <div class="form-group">
                    @Html.LabelFor(model => model.ProjectId, "Project", htmlAttributes: new { @class = "control-label col-sm-2" })
                    <div class="col-sm-4">
                        @Html.DropDownList("ProjectId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TicketTypeId, "Type", htmlAttributes: new { @class = "control-label col-sm-2" })
                    <div class="col-sm-4">
                        @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TicketPriorityId, "Priority", htmlAttributes: new { @class = "control-label col-sm-2" })
                    <div class="col-sm-4">
                        @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*Only Admin and PM can adjust Status and assign Developer*@
                @if (ViewBag.CanAssignDeveloper == true)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.TicketStatusId, "Status", htmlAttributes: new { @class = "control-label col-sm-2" })
                        <div class="col-sm-4">
                            @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AssignedToDevId, "Developer", htmlAttributes: new { @class = "control-label col-sm-2" })
                        <div class="col-sm-4">
                            @Html.DropDownList("AssignedToDevId", null, "-- Select Developer --", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.AssignedToDevId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
                else
                {
                    @Html.HiddenFor(m => m.TicketStatusId);
                    @Html.HiddenFor(m => m.AssignedToDevId);
                }

                <div class="form-group">
                    @Html.LabelFor(model => model.SkillRequiredId, "Skill Required", htmlAttributes: new { @class = "control-label col-sm-2" })
                    <div class="col-sm-4">
                        @Html.DropDownList("SkillRequiredId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SkillRequiredId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-sm-2" })
                    <div class="col-sm-4">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-sm-2" })
                    <div class="col-sm-4">
                        @Html.TextAreaFor(model => model.Description, 4, 40, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DueDate, "Due Date", htmlAttributes: new { @class = "control-label col-sm-2" })
                    <div class="col-sm-4">
                        @Html.TextBox("DueDate", Model.DueDate.ToString("d MMM yyyy"), 
                            new { htmlAttributes = new { @class = "form-control", type = "text" } })
                        @*<input class="form-control" type="text" id="DueDate2" name="DueDate2" data-date-format="mm-dd-yyyy" data-date-autoclose="true" />*@
                        @*@Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.HoursToComplete, htmlAttributes: new { @class = "control-label col-sm-2" })
                    <div class="col-sm-4">
                        @Html.EditorFor(model => model.HoursToComplete, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.HoursToComplete, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-offset-2 col-sm-1">
                        <input type="submit" value="Save" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
</div>


@section Scripts {
    <script>
        $(document).ready(function () {
            $('#sidebar-Tickets').addClass('active');
            $('#sidebar-Tickets-Edit').addClass('active');
        });
    </script>
    @*@Scripts.Render("~/bundles/jqueryval")*@
    <script>
        $(function () {
            $('#DueDate2').datepicker ()});

        $(function () {
            $("#DueDate").datepicker({
                inline: true,
                dateFormat: "D d M yy"
            });
        });
    </script>
}


