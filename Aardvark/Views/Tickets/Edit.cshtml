@model Aardvark.Models.Ticket

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Ticket # @Model.Id</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.ProjectId, "Project", htmlAttributes: new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @Html.DropDownList("ProjectId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TicketTypeId, "Type", htmlAttributes: new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TicketPriorityId, "Priority", htmlAttributes: new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
            </div>
        </div>

        @*Only Admin and PM can adjust Status and assign Developer*@
        @if (ViewBag.CanAssignDeveloper == true)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.TicketStatusId, "Status", htmlAttributes: new { @class = "control-label col-sm-2" })
                <div class="col-sm-10">
                    @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AssignedToUserId, "Developer", htmlAttributes: new { @class = "control-label col-sm-2" })
                <div class="col-sm-10">
                    @Html.DropDownList("AssignedToUserId", null, "-- Select Developer --", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AssignedToUserId, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.SkillRequiredId, "Skill Required", htmlAttributes: new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @Html.DropDownList("SkillRequiredId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SkillRequiredId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @Html.TextAreaFor(model => model.Description, 4, 40, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DueDate, "Due Date", htmlAttributes: new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @Html.TextBox("DueDate", Model.DueDate.ToString("ddd d MMM yyyy"), new { htmlAttributes = new { @class = "form-control", type = "text" } })
                @*@Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HoursToComplete, htmlAttributes: new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.HoursToComplete, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HoursToComplete, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-1">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
            <div>
                @Html.ActionLink("Add a Comment", "Create", "Comments", new { id = Model.Id, anchor = "noneYet", page="1" }, new { @class = "btn btn-info" })
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(
        function () {
            $("#DueDate").datepicker({
                    inline: true,
                    dateFormat: "D d M yy"
                });
        });
    </script>
}


