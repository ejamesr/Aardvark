List of Methods for Debugging

jQuery Conflicts
================
Only one jQuery.js file can be loaded -- disable any prior versions that might be loaded.
The jQuery.js file must come first!

This works:
     <script src="~/js/jquery-2.1.4.min.js"></script>
     <script src="~/js/jquery-ui-1.11.4.custom/jquery-ui.min.js"></script>
     <script src="~/js/DataTables-1.10.7/media/js/jquery.dataTables.min.js"></script>


Can't debug the .cshtml file (won't hit breakpoints)
====================================================
Some people have suggested to Build/Clean Solution, then removing Bin and Obj folders, then closing and restarting Visual Studio

What I've found:
- This issue seems to occur when there is some major bug in the .cshtml file.  Once it is removed, the file can be debugged.
- To test this, comment just about everything except for some small innocuous code, see if that can be debugged.
  - if so, you are on your way!  Just uncomment out a few areas at a time
- Or, see if the model is not correct


To get dropdown menu to show
============================
$('#element_id').trigger('click')


When the code crashes when creating 'manager' in UserRolesHelper
================================================================
This almost always means you just changed something in the database; do 'update-database'.

If you make a field [Required] that was not at first (or change/add some other attribute), and there are 
one or more records with a null in that field, the update will abort with an error.  First, put a non-null value
in those fields.  Then to 'update-database'.  Things should work fine after that!


File won't upload, 'fileUpload' var is null on POST
===================================================
First, you need to specify that the form comes in multiple parts; this statement does that:

@* To specify that the form comes in multiple parts: *@
@using (Html.BeginForm("Create", "Posts", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
	...
}

Next, make sure the input element has the name and id set to the value the POST controller expects
(i.e., set them to 'fileUpload').


RouteConfig.cs
==============
Insert the statement:

routes.LowercaseUrls = true;

into RouteConfig.cs - this causes all URLs displayed at the bottom of the screen to show in lowercase,
conforming to what is normally expected on the web.

Going back to previous page (using browser's cache, nothing in memory should change)
====================================================================================
from: http://stackoverflow.com/questions/18465895/on-html-actionlink-click-go-to-previous-page

Unless you're tracking what the previous page is on the server, 
why not just use the browser's internal history? In that case there wouldn't be a need 
for server-side code. You could just use something like this:

<a href="javascript:void(0);" onclick="history.go(-1);">Back to Details</a>
Or, separating the code from the markup:

<a href="javascript:void(0);" id="backLink">Back to Details</a>

<script type="text/javascript">
    $(document).on('click', '#backLink', function () {
        history.go(-1);
    });
</script>

This would send the user back to whatever was the last page in their browser history. 
(Of course, if they reached that page from any other source then it wouldn't take them "back to details" but instead just "back".)

shareimprove this answer
answered Aug 27 '13 at 12:55

David
83.6k1483155
add a comment

